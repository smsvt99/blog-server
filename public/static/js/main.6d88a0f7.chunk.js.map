{"version":3,"sources":["ServiceCaller.js","A.js","TopNav.js","util.js","Post.js","Home.js","PostEdit.js","PostManager.js","Admin.js","SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["ServiceCaller","method","endPoint","queryParams","options","credentials","setQueryParams","key","value","push","setBody","obj","body","JSON","stringify","setAdditionalOptions","call","a","includes","headers","applyQueryParams","fetch","response","json","forEach","i","separator","this","A","props","additionalClasses","onClick","children","className","withRouter","me","setMe","useState","showForm","setShowForm","onAdmin","useLocation","pathname","_me","toggleFormVisibility","e","isLogged","menuOptions","isLoggedIn","name","role","to","menu","map","item","id","LoginForm","toggle","username","setUsername","password","setPassword","showFailure","setShowFailure","history","useHistory","onChange","target","type","timeStamp","ts","split","Post","post","stub","user","edited","createdAt","updatedAt","title","Tags","tags","Comments","postId","_id","comments","setComments","showComments","setShowComments","getComments","_comments","useEffect","NewCommentInput","length","comment","Comment","newComment","setNewComment","success","rows","tag","Tag","Home","appState","posts","setPosts","_posts","PostEdit","setTitle","setTags","published","setPublished","allTags","setAllTags","didInitialLoad","setDidInitialLoad","showTagsPicker","setShowTagsPicker","heading","tagsButton","toggleTags","reqBody","alert","_allTags","NewTag","TagPicker","checked","style","width","isChecked","_tag","handleChange","_tags","filter","tagsCopy","parse","setName","Stub","setPostToEdit","window","confirm","PostManager","postToEdit","opts","match","useRouteMatch","MenuItem","option","current","params","path","classes","SignUp","password1","setPassword1","password2","setPassword2","email","setEmail","notify","setNotify","validationSuccess","setValidationSuccess","validationNotes","setValidationNotes","preValidate","res","error","message","readOnly","change","disabled","App","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d88a0f7.chunk.js","sourcesContent":["export default class ServiceCaller{\r\n    endPoint;\r\n    queryParams = [];\r\n    options = {\r\n        credentials: 'include',\r\n    }\r\n\r\n    constructor(method, endPoint){\r\n        this.options.method = method;\r\n        this.endPoint = endPoint;\r\n        return this;\r\n    }\r\n\r\n    setQueryParams = ([key, value]) => {\r\n        this.queryParams.push([key, value])\r\n        return this;\r\n    }\r\n\r\n    setBody = (obj) => {\r\n        this.options.body = JSON.stringify(obj);\r\n        return this;\r\n    }\r\n\r\n    setAdditionalOptions = (obj) => {\r\n        //do I need this?\r\n    }\r\n\r\n    call = async () =>{\r\n        if([\"POST\", \"PATCH\"].includes(this.options.method)){\r\n            this.options.headers = {\r\n                'Content-Type': 'application/json'\r\n              }\r\n        }\r\n        this.applyQueryParams();\r\n        const response = await fetch(this.endPoint, this.options);\r\n        return await response.json();\r\n    }\r\n\r\n    //private\r\n    applyQueryParams = () => {\r\n        this.queryParams.forEach(([key, value], i) => {\r\n            const separator = i === 0 ? \"?\" : \"&\";\r\n            this.endPoint += separator + key + \"=\" + value;\r\n        })\r\n    }\r\n}\r\n","//like <a>, but sensitive to symantics\r\nexport default function A(props){\r\n   \r\n    let { additionalClasses, onClick, children } = props;\r\n    if(!additionalClasses){\r\n        additionalClasses = \"\";\r\n    }\r\n    return <button className={`A ${additionalClasses}`} onClick={onClick}>{children}</button>\r\n}","import { useState } from 'react';\r\nimport ServiceCaller from './ServiceCaller';\r\nimport { useHistory, withRouter, Link, useLocation, Redirect } from 'react-router-dom';\r\nimport A from './A';\r\n\r\nfunction TopNav(props){\r\n    const {me, setMe} = props;\r\n    const [showForm, setShowForm] = useState(false);\r\n    const location = useLocation();\r\n    const onAdmin = location.pathname.includes('admin')\r\n    \r\n    async function logout(){\r\n        const _me = await new ServiceCaller(\"GET\", \"/logout\").call();\r\n        setMe(_me);\r\n    }\r\n\r\n    async function toggleFormVisibility(e){\r\n        //before opening form, ask server if session exists and inform UI\r\n        if(!showForm){\r\n            const _me = await new ServiceCaller(\"GET\", \"/me\").call();\r\n            if(me.isLogged){\r\n                setMe(_me); //i.e., and don't open form\r\n            } else {\r\n                setShowForm(!showForm);\r\n            }\r\n        } else {\r\n            setShowForm(!showForm);\r\n        }\r\n    }\r\n\r\n    const menuOptions = [];\r\n    if(me.isLoggedIn){\r\n        menuOptions.push(me.name)\r\n       !onAdmin && me.role === \"ADMIN\" && menuOptions.push(<Link to=\"/admin/new_post\"><A>Dashboard</A></Link>)\r\n        onAdmin && menuOptions.push(<Link to=\"/\"><A>Main Site</A></Link>)\r\n        menuOptions.push(<A onClick={logout}>Logout</A>)\r\n    } else {\r\n        menuOptions.push(<A onClick={toggleFormVisibility}>Login</A>)\r\n    }\r\n\r\n    const menu = menuOptions.map((item, i) => {\r\n        const separator = i === 0 ? \"\" : \" | \"\r\n        return <span key={`menu_${i}`}>{separator}{item}</span>;\r\n    })\r\n\r\n    return <div id=\"top-nav\">\r\n        <div>{menu}</div>\r\n        { showForm \r\n                ? <LoginForm \r\n                    me={me} \r\n                    setMe={setMe} \r\n                    toggle={toggleFormVisibility} \r\n                    setShowForm={setShowForm}\r\n                  /> \r\n                : null}\r\n    </div>\r\n\r\n}\r\n\r\nexport default withRouter(TopNav)\r\n\r\nfunction LoginForm(props){\r\n\r\n    const {me, setMe, toggle, setShowForm} = props;\r\n\r\n    const [username, setUsername] = useState(\"\"); //it's an email address\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    function onPasswordChange(e){\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    function onUsernameChange(e){\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    async function login(){\r\n        const _me = await new ServiceCaller(\"POST\", \"/login\")\r\n            .setBody({\r\n                username: username,\r\n                password: password\r\n            })\r\n            .call();\r\n        \r\n        if(_me.isLoggedIn ){\r\n            toggle();\r\n            setMe(_me);\r\n            history.push('/admin/new_post');\r\n        } else {\r\n            setShowFailure(true)\r\n        }\r\n    }\r\n\r\n    return <div id=\"login\">\r\n        <div className=\"right\">\r\n            <A onClick={toggle}>✖</A>\r\n        </div>\r\n        <h2 className=\"center space\">Login</h2>\r\n        {showFailure && <p className=\"red center\">Invalid credentials</p>}\r\n        \r\n        <div className=\"form-group\">\r\n            <label >Email:</label>\r\n            <input value={username} onChange={onUsernameChange}/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label>Password:</label>\r\n            <input  type=\"password\" value={password} onChange={onPasswordChange}/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <button className=\"button\" onClick={login}>Submit</button>\r\n        </div>\r\n        <p className=\"detail right\">\r\n            <Link onClick={()=>setShowForm(false)} to=\"/sign-up\"><A>Sign Up</A></Link>\r\n        </p>\r\n    </div>\r\n\r\n\r\n}","export function timeStamp(ts){\r\n    return ts.split('T')[0];\r\n}\r\n\r\nexport const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;","import {useEffect, useState} from \"react\";\r\nimport ServiceCaller from './ServiceCaller';\r\nimport { timeStamp } from \"./util\";\r\nimport A from './A';\r\n\r\n\r\n\r\nexport default function Post(props){\r\n\r\n    const { post, stub, me } = props;\r\n    const { user } = post;\r\n\r\n    const edited = post.createdAt !== post.updatedAt;\r\n\r\n    return<div className=\"post\">\r\n            {stub ? <h2>{post.title}</h2> : <h1>{post.title}</h1> }\r\n            <p>By {user.name}</p>\r\n            <p className=\"detail\">Published {timeStamp(post.createdAt)}</p>\r\n            { edited ? <p className=\"detail\">Edited {timeStamp(post.updatedAt)}</p> : null}\r\n            { !stub ? <div>\r\n                    <Tags tags ={post.tags}/>\r\n                    <hr/>\r\n                    <p>{post.body}</p>\r\n                    <hr/>\r\n                    <Comments me={me} postId = {post._id}/> \r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n}\r\n\r\nfunction Comments(props){ \r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [showComments, setShowComments] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        if(showComments){\r\n            getComments();\r\n        }\r\n    }, [showComments])\r\n\r\n    async function getComments(){\r\n        const _comments = await new ServiceCaller(\"GET\", \"/comments\")\r\n            .setQueryParams([\"post_id\", props.postId])\r\n            .call();\r\n        setComments(_comments)\r\n    }\r\n\r\n    function loadComments(e){\r\n        setShowComments(true);\r\n    }\r\n\r\n    function hideComments(e){\r\n        setShowComments(false);\r\n    }\r\n\r\n    if(showComments){\r\n        return <div>\r\n        {props.me.isLoggedIn ? <NewCommentInput postId={props.postId} getComments={getComments}/> : <p className=\"detail\">Log in to leave a comment</p>}\r\n        {comments.length ? <div> {comments.map(comment => <Comment comment={comment} me={props.me}/>)}</div> : <p className=\"detail\">No comments yet</p>}\r\n        <div className=\"right\">\r\n            <A onClick={hideComments}>Hide Comments</A>\r\n        </div>\r\n    </div>\r\n    } else {\r\n        return <div className=\"right\">\r\n            <A onClick={loadComments}>Load Comments</A>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Comment(props){\r\n    const {comment} = props;\r\n    const { user } = comment;\r\n\r\n    const edited = comment.createdAt !== comment.updatedAt;\r\n\r\n    return <div className = \"comment\">\r\n        <div className = \"flex-row align-base\">\r\n            <p>{user.name}</p>\r\n            <p className=\"detail\">{timeStamp(comment.createdAt)}</p>\r\n        </div>\r\n        { edited ? <p className=\"detail\">Edited {timeStamp(comment.updatedAt)}</p> : null }\r\n        <p>{comment.body}</p>\r\n    </div>\r\n}\r\n\r\nfunction NewCommentInput(props){\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [showFailure, setShowFailure] = useState(false);\r\n\r\n    function onNewCommentChange(e){\r\n        setNewComment(e.target.value);\r\n    }\r\n\r\n    async function submit(){\r\n        const res = await new ServiceCaller(\"POST\", \"/comments\")\r\n            .setBody({\r\n                body: newComment,\r\n                postId: props.postId\r\n            })\r\n            .call();\r\n        if(res.success){\r\n            setNewComment(\"\");\r\n            setShowFailure(false)\r\n            props.getComments();\r\n        } else {\r\n            setShowFailure(true);\r\n        }\r\n    }\r\n\r\n    return <div className=\"form-group\">\r\n        <label>New Comment</label>\r\n        {showFailure && <p className=\"red center\">Unable to save comment</p>}\r\n        <textarea rows=\"5\" value={newComment} onChange={onNewCommentChange}/>\r\n        <div className=\"right\">\r\n            <button onClick={submit}>Submit</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nfunction Tags(props){\r\n    const { tags } = props;\r\n    return <div className = \"flex-row\">\r\n        {tags.map(tag => <Tag tag={tag} key={tag._id}/>)}\r\n    </div>\r\n}\r\n\r\nfunction Tag(props){\r\n    const { tag } = props;\r\n    return <p className=\"tag\">{tag.name}</p>\r\n}","import React, {\r\n    useEffect\r\n  } from \"react\";\r\n\r\nimport Post from './Post';\r\nimport ServiceCaller from './ServiceCaller';\r\n\r\nexport default function Home(props) {\r\n    const { posts, setPosts, me } = props.appState;\r\n  \r\n  \r\n    useEffect(() => {\r\n      (async function getData(){\r\n            const _posts = await new ServiceCaller(\"GET\", \"/posts\").call();\r\n            setPosts(_posts)\r\n        })();\r\n    }, [setPosts])\r\n  \r\n    return posts ? posts.map(post => <Post post={post} stub={false} key={post._id} me={me}/>) \r\n                 : \"loading....\";\r\n  }\r\n","import { useState, useEffect } from 'react';\r\nimport A from './A';\r\nimport ServiceCaller from './ServiceCaller';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport default function PostEdit(props){\r\n    const {_id} = props; //pass null for new post, \r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [published, setPublished] = useState(false);\r\n    const [allTags, setAllTags] = useState([]);\r\n    const [didInitialLoad, setDidInitialLoad] = useState(false);\r\n    const [showTagsPicker, setShowTagsPicker] = useState(false);\r\n\r\n\r\n    const heading = props._id ? \"Editing\" : \"New Post\";\r\n    const tagsButton = showTagsPicker ? \"\" : \" Add/ Pick\";\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        if(!didInitialLoad){\r\n            (async function doInitialLoad(){\r\n\r\n                const _allTags = await new ServiceCaller(\"GET\", \"/tags\").call();\r\n\r\n                if(_id){\r\n                    const post = await new ServiceCaller(\"GET\", \"/posts\")\r\n                        .setQueryParams([\"_id\", _id])\r\n                        .call();\r\n                    setTitle(post.title);\r\n                    setBody(post.body);\r\n                    setTags(post.tags)\r\n                    setPublished(post.published)\r\n                }\r\n                setAllTags(_allTags)\r\n                setDidInitialLoad(true);\r\n                \r\n            })();\r\n        }\r\n    },[])\r\n\r\n    function onTitleChange(e){\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    function onBodyChange(e){\r\n        setBody(e.target.value);\r\n    }\r\n\r\n    function onPublishedChange(){\r\n        setPublished(!published)\r\n    }\r\n\r\n    function toggleTags(){\r\n        setShowTagsPicker(!showTagsPicker);\r\n    }\r\n\r\n    async function save(){\r\n        const reqBody = {\r\n            title:title,\r\n            body: body,\r\n            tags: tags,\r\n            published: published\r\n        }\r\n\r\n        //editing\r\n        if(_id){ \r\n            const res = await new ServiceCaller(\"PATCH\", \"/posts\")\r\n                .setQueryParams([\"_id\", _id])\r\n                .setBody(reqBody)\r\n                .call();\r\n            if(res.success){\r\n                history.push(\"/\");\r\n            } else {\r\n                alert(\"Unable to save\")\r\n            }\r\n        //new post\r\n        } else { \r\n            const res = await new ServiceCaller(\"POST\", \"/posts\")\r\n                .setBody(reqBody)\r\n                .call();\r\n            if(res.success){\r\n                history.push(\"/\");\r\n            } else {\r\n                alert(\"Unable to save\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return didInitialLoad ? <div id=\"post-edit\">\r\n        <div className=\"window-topper\"></div>\r\n        <div className=\"window-body\">\r\n        <h2 className=\"center\">{heading}</h2>\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <input onChange = {onTitleChange} value = {title} type=\"text\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <div className=\"flex-row\">\r\n                    <label className=\"pad-right\">Tags</label>\r\n                    <A onClick={toggleTags}>{tagsButton}</A>\r\n                </div>\r\n                {showTagsPicker && <div id=\"tag-select\">\r\n                    <div className=\"right\">\r\n                        <A onClick={toggleTags}>✖</A>\r\n                    </div>\r\n                    <NewTag setAllTags = {setAllTags}/>\r\n                    {allTags.map(tag => <TagPicker key={tag._id} tag={tag} tags={tags} setTags={setTags} allTags={allTags}/>)}\r\n                </div>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Body</label>\r\n                <textarea rows=\"25\" onChange={onBodyChange} value={body}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Published\r\n                    <input checked={published} onChange={onPublishedChange} className=\"space-right\" type=\"checkbox\"/>\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button onClick={save} className=\"button\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    </div> : <div style={{width: \"500px\"}}>Loading....</div>\r\n\r\n}\r\n\r\nfunction TagPicker(props){\r\n    const {tag, tags, setTags, allTags} = props;\r\n\r\n    const isChecked = tags.map(_tag=> _tag._id).includes(tag._id);\r\n\r\n    function handleChange(){\r\n        //remove\r\n        if(isChecked){ \r\n            const _tags = tags.filter(_tag => _tag._id !== tag._id)\r\n            setTags(_tags);\r\n        //add\r\n        } else { \r\n            const tagsCopy = JSON.parse(JSON.stringify(tags));\r\n            tagsCopy.push(tag);\r\n            setTags(tagsCopy);\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"flex-row tag-option\" onClick={handleChange}>\r\n            <input onChange={handleChange} checked={isChecked} type=\"checkbox\"/> \r\n            <label>{tag.name}</label>\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nfunction NewTag(props){\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    function onNameChange(e){\r\n        setName(e.target.value)\r\n    }\r\n\r\n    async function save(){\r\n        const res = await new ServiceCaller(\"POST\", \"/tags\")\r\n            .setBody({name: name})\r\n            .call();\r\n        if(res.success){\r\n            const _allTags = await new ServiceCaller(\"GET\", \"/tags\").call();\r\n            props.setAllTags(_allTags)\r\n        } else {\r\n            alert(\"Unable to save tag\")\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <p>Add New Tag</p>\r\n        <input onChange={onNameChange} value={name} type=\"text\"/>\r\n        <button onClick={save}>Enter</button>\r\n        <hr/>\r\n    </div>\r\n}","import {useState, useEffect} from 'react';\r\nimport PostEdit from './PostEdit'; \r\nimport Post from './Post';\r\nimport ServiceCaller from './ServiceCaller';\r\nimport A from './A';\r\n\r\nfunction PostManager(){\r\n    const [postToEdit, setPostToEdit] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async function getPosts(){\r\n            const _posts = await new ServiceCaller(\"GET\", \"/posts\")\r\n                .setQueryParams([\"stub\", 1])\r\n                .call();\r\n            setPosts(_posts);\r\n        })();\r\n    },[])\r\n\r\n    function stopEditing(){\r\n        setPostToEdit(null);\r\n    }\r\n\r\n    if(postToEdit){\r\n        return <div>\r\n                    <div className= \"right space\">\r\n                        <A onClick={stopEditing}>Back to list</A>\r\n                    </div>\r\n                    <PostEdit _id={postToEdit}/>\r\n                </div>\r\n    } else {\r\n        return <div>\r\n            {posts.map(post => <Stub key={post._id} post = {post} setPostToEdit={setPostToEdit} setPosts={setPosts}/>)}\r\n        </div> \r\n\r\n    }\r\n}\r\n\r\nfunction Stub(props){\r\n    const {post, setPostToEdit, setPosts} = props;\r\n\r\n    function edit(){\r\n        setPostToEdit(post._id);\r\n    }\r\n\r\n    async function remove(){\r\n        const answer = window.confirm(`Are you sure you want to delete '${post.title}'?`);\r\n        if(answer === true){\r\n            const res = await new ServiceCaller(\"DELETE\", \"/posts\")\r\n                .setQueryParams([\"_id\", post._id])\r\n                .call();\r\n\r\n            if(res.success){\r\n                const _posts = await new ServiceCaller(\"GET\", \"/posts\")\r\n                    .setQueryParams([\"stub\", 1])\r\n                    .call();\r\n                setPosts(_posts);\r\n            } else {\r\n                alert(\"Unable to delete\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return <div className=\"flex- stub\">\r\n        <div className=\"left\">\r\n            <A onClick={edit}>Edit</A>\r\n            <A additionalClasses=\"red\" onClick={remove}>Delete</A>\r\n        </div>\r\n        <div className=\"right\">\r\n            <Post stub=\"true\" post={post} key={post._id}/>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default PostManager;","import A from './A';\r\nimport {Switch, Route, withRouter, useRouteMatch, Redirect, Link} from 'react-router-dom';\r\nimport PostEdit from './PostEdit';\r\nimport PostManager from './PostManager';\r\n\r\nfunction Admin(){\r\n\r\n    const opts = {\r\n        NEWPOST: 'new_post',\r\n        MANAGE_POSTS: 'manage_posts',\r\n        MANAGE_TAGS: 'manage_tags',\r\n        MANAGE_USERS: 'manage_users',\r\n        MANAGE_COMMENTS: 'manage_comments'\r\n    }\r\n\r\n    const match = useRouteMatch();\r\n\r\n    return <div id=\"admin\">\r\n        <h1>Admin Dashboard</h1>\r\n        <hr/>\r\n        <div id=\"wrapper\">\r\n            <ul>\r\n                <MenuItem option={opts.NEWPOST} current={match.params.option}>\r\n                    <A>Write New Post</A>\r\n                </MenuItem>\r\n\r\n                <MenuItem option={opts.MANAGE_POSTS} current={match.params.option}>\r\n                    <A>Manage Posts</A>\r\n                </MenuItem>\r\n\r\n                <MenuItem option={opts.MANAGE_TAGS} current={match.params.option}>\r\n                    <A>Manage Tags</A>\r\n                </MenuItem>\r\n\r\n                <MenuItem option={opts.MANAGE_USERS} current={match.params.option}>\r\n                    <A>Manage Users</A>\r\n                </MenuItem>\r\n\r\n                <MenuItem option={opts.MANAGE_COMMENTS} current={match.params.option}>\r\n                    <A>Manage Comments</A>\r\n                </MenuItem>            \r\n            </ul>\r\n            \r\n            <div id=\"right\">\r\n                <Switch>\r\n                    <Route path={`${match.path}/${opts.NEWPOST}`}>\r\n                        <PostEdit _id={null}/>\r\n                    </Route>\r\n\r\n                    <Route path={`${match.path}/${opts.MANAGE_POSTS}`}>\r\n                        <PostManager />\r\n                    </Route>\r\n\r\n                    <Route path={`${match.path}/${opts.MANAGE_TAGS}`}>\r\n                        <p>manage tags</p>\r\n                    </Route>\r\n\r\n                    <Route path={`${match.path}/${opts.MANAGE_USERS}`}>\r\n                        <p>manage users</p>\r\n                    </Route>\r\n\r\n                    <Route path={`${match.path}/${opts.MANAGE_COMMENTS}`}>\r\n                        <p>manage comments</p>\r\n                    </Route>\r\n\r\n                    <Route>\r\n                        <Redirect to={`${match.path}/${opts.NEWPOST}`}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default withRouter(Admin);\r\n\r\nfunction MenuItem(props){\r\n\r\n    const isCurrent = props.option === props.current;\r\n    const classes = isCurrent ? \"menu-item current\" : \"menu-item\"\r\n\r\n    return <Link to={`/admin/${props.option}`}>\r\n            <li\r\n                // comments\r\n                className={classes}>\r\n                {props.children}\r\n            </li>\r\n        </Link>\r\n}","import { useState } from 'react';\r\nimport ServiceCaller from './ServiceCaller';\r\n\r\nexport default function SignUp(props){\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [notify, setNotify] = useState(false);\r\n    const [validationSuccess, setValidationSuccess] = useState(false);\r\n    const [validationNotes, setValidationNotes] = useState([]);\r\n\r\n    function onNameChange(e){\r\n        setName(e.target.value)\r\n    }\r\n    function onPassword1Change(e){\r\n        setPassword1(e.target.value)\r\n    }\r\n    function onPassword2Change(e){\r\n        setPassword2(e.target.change)\r\n    }\r\n    function onEmailChange(e){\r\n        setEmail(e.target.value)\r\n    }\r\n    function onNotifyChange(){\r\n        setNotify(!notify);\r\n    }\r\n\r\n    //Mongoose will do real validation\r\n    function preValidate(){\r\n        if(\r\n            name.length      === 0 ||\r\n            password1.length === 0 ||\r\n            password2.length === 0 ||\r\n            email.length     === 0\r\n        ){\r\n            setValidationNotes(\"All fields are required\");\r\n            return false;\r\n        }\r\n        if (password1 !== password2){\r\n            setValidationNotes(\"Passwords must match\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function submit(){\r\n        if(!preValidate()) return;\r\n        const res = await new ServiceCaller(\"POST\", \"/users\")\r\n            .setBody({\r\n                email: email,\r\n                password: password1,\r\n                name: name,\r\n                notify: notify\r\n            })\r\n            .call();\r\n            if(res.success){\r\n                //something\r\n                setValidationSuccess(true);\r\n                setValidationNotes([\"Success! You can now log in with the credentials you provided.\"])\r\n            } else {\r\n                // const notes = res.error.errors.map((key, value) => value.message);\r\n                setValidationSuccess(false);\r\n                setValidationNotes(res.error.message)\r\n            }\r\n    }\r\n\r\n    return <div id=\"sign-up\">\r\n        <h1>Sign Up</h1>\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label>Display Name</label>\r\n                <input type=\"text\" value={name} onChange={onNameChange} readOnly={validationSuccess}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"text\" value={email} onChange={onEmailChange} readOnly={validationSuccess}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={password1} onChange={onPassword1Change} readOnly={validationSuccess}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Password (confirm)</label>\r\n                <input type=\"password\" value={password2} onChange={onPassword2Change} readOnly={validationSuccess}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Notify?</label>\r\n                <p className=\"detail\">\r\n                    <input type=\"checkbox\" value={notify} onChange={onNotifyChange} readOnly={validationSuccess}/>\r\n                    Email me when new posts are published\r\n                </p>\r\n            </div>\r\n            <div className = {validationSuccess ? \"center green\" : \"center red\"}>{validationNotes}</div>\r\n            <div className=\"form-group\">\r\n                <button onClick={submit} className=\"button\" disabled={validationSuccess}>Sign Up</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {\n  useState,\n} from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport TopNav from './TopNav';\nimport Home from './Home';\nimport Admin from './Admin';\nimport SignUp from './SignUp';\n\n\nexport default function App() {\n  const [me, setMe] = useState({isLoggedIn: false})\n  // const [me, setMe] = useState({isLoggedIn: true, role: \"ADMIN\"})\n  \n  const [posts, setPosts] = useState(null);\n  // const [tags, setTags] = useState([]);\n  // const [users, setUsers] = useState([]);\n  // const [comments, setComments] = useState([]);\n\n  const appState = {\n    me: me,\n    // setMe: setMe,\n    posts: posts,\n    setPosts: setPosts,\n    // tags: tags,\n    // setTags: setTags,\n    // users: users,\n    // setUsers: setUsers,\n    // comments: comments,\n    // setComments: setComments\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n      <TopNav me={me} setMe={setMe}/>\n        <Switch>\n\n          <Route path=\"/admin/:option?\" render = {() => {\n            return me.isLoggedIn && me.role === 'ADMIN'\n              ? < Admin />\n              : <Redirect to = \"/\"/>\n          }}>\n          </Route>\n\n          <Route path=\"/sign-up\">\n            <SignUp/>\n          </Route>\n          \n          <Route path=\"/\">\n            <Home\n              appState = {appState}\n            />\n          </Route>\n\n          <Route>\n            <Redirect to=\"/\"/>\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}